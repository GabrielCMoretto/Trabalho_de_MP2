\hypertarget{funcao_8h}{}\section{/home/gabriel/\+Documents/\+U\+N\+B\+\_\+\+Linux/\+Trabalho\+\_\+2/\+Trab\+\_\+2/include/funcao.h File Reference}
\label{funcao_8h}\index{/home/gabriel/\+Documents/\+U\+N\+B\+\_\+\+Linux/\+Trabalho\+\_\+2/\+Trab\+\_\+2/include/funcao.\+h@{/home/gabriel/\+Documents/\+U\+N\+B\+\_\+\+Linux/\+Trabalho\+\_\+2/\+Trab\+\_\+2/include/funcao.\+h}}


esse arquivo contém a interface do arquivo \hyperlink{funcao_8c}{funcao.\+c}  


{\ttfamily \#include $<$stdio.\+h$>$}\\*
{\ttfamily \#include $<$stdlib.\+h$>$}\\*
{\ttfamily \#include \char`\"{}funcao.\+c\char`\"{}}\\*
Include dependency graph for funcao.\+h\+:
% FIG 0
\subsection*{Functions}
\begin{DoxyCompactItemize}
\item 
int \hyperlink{funcao_8h_a437108d79d6fa240ff23d5b4b029c98c}{converte\+\_\+romano} (const char romano\mbox{[}$\,$\mbox{]})
\begin{DoxyCompactList}\small\item\em Função primária para a conversão. \end{DoxyCompactList}\item 
int \hyperlink{funcao_8h_a7674f764c2babd495a6dfc8fa10756d8}{compara} (int numero, int ultimo, int ultimo\+\_\+numero)
\begin{DoxyCompactList}\small\item\em Função auxiliar de converte\+\_\+romano. \end{DoxyCompactList}\end{DoxyCompactItemize}


\subsection{Detailed Description}
esse arquivo contém a interface do arquivo \hyperlink{funcao_8c}{funcao.\+c} 



\subsection{Function Documentation}
\index{funcao.\+h@{funcao.\+h}!compara@{compara}}
\index{compara@{compara}!funcao.\+h@{funcao.\+h}}
\subsubsection[{\texorpdfstring{compara(int numero, int ultimo, int ultimo\+\_\+numero)}{compara(int numero, int ultimo, int ultimo_numero)}}]{\setlength{\rightskip}{0pt plus 5cm}int compara (
\begin{DoxyParamCaption}
\item[{int}]{numero, }
\item[{int}]{ultimo, }
\item[{int}]{ultimo\+\_\+numero}
\end{DoxyParamCaption}
)}\hypertarget{funcao_8h_a7674f764c2babd495a6dfc8fa10756d8}{}\label{funcao_8h_a7674f764c2babd495a6dfc8fa10756d8}


Função auxiliar de converte\+\_\+romano. 

Função auxiliar de converte\+\_\+romano.

Falta ainda implementar mais excessões para o código, porém o tempo é curto. 
\begin{DoxyParams}{Parameters}
{\em um} & número que vai ser analisado, o seu antecessor na string, e número adquirido anteriormente por essa função. \\
\hline
\end{DoxyParams}
\begin{DoxyReturn}{Returns}
um inteiro que satisfaz a operação da combinação de dois números. 
\end{DoxyReturn}
\index{funcao.\+h@{funcao.\+h}!converte\+\_\+romano@{converte\+\_\+romano}}
\index{converte\+\_\+romano@{converte\+\_\+romano}!funcao.\+h@{funcao.\+h}}
\subsubsection[{\texorpdfstring{converte\+\_\+romano(const char romano[])}{converte_romano(const char romano[])}}]{\setlength{\rightskip}{0pt plus 5cm}int converte\+\_\+romano (
\begin{DoxyParamCaption}
\item[{const char}]{romano\mbox{[}$\,$\mbox{]}}
\end{DoxyParamCaption}
)}\hypertarget{funcao_8h_a437108d79d6fa240ff23d5b4b029c98c}{}\label{funcao_8h_a437108d79d6fa240ff23d5b4b029c98c}


Função primária para a conversão. 

Função primária para a conversão.

O algoritmo lê a string de trás para frente e identifica a letra, depois, ele chama a função compara para fazer uma operação satisfatória em como se lê os números romanos. Ele também identifica se há uma letra diferente das aceitas, nesse caso, a função retorna -\/1. A função também retorna -\/1 caso o número seja maior que 3000 ou menor que zero. 
\begin{DoxyParams}{Parameters}
{\em uma} & string qualquer. \\
\hline
\end{DoxyParams}
\begin{DoxyReturn}{Returns}
um inteiro equivalente em romano. 
\end{DoxyReturn}
